@model DvdStore.Models.DvdViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DvdDetails</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.DvdTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.DvdTitle, new { htmlAttributes = new { @class = "form-control",Name = "DvdTitle" } })
                @Html.ValidationMessageFor(model => model.Dvd.DvdTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.DvdDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.DvdDescription, new { htmlAttributes = new { @class = "form-control", Name= "DvdDescription"} })
                @Html.ValidationMessageFor(model => model.Dvd.DvdDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.TotalDvdCopies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.TotalDvdCopies, new { htmlAttributes = new { @class = "form-control",Name= "TotalDvdCopies"} })
                @Html.ValidationMessageFor(model => model.Dvd.TotalDvdCopies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.ReleaseDate, new { htmlAttributes = new { @class = "form-control",Name= "ReleaseDate" } })
                @Html.ValidationMessageFor(model => model.Dvd.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.DateAdded, new { htmlAttributes = new { @class = "form-control",Name= "DateAdded" } })
                @Html.ValidationMessageFor(model => model.Dvd.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.AgeRestiriction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Dvd.AgeRestiriction, new { htmlAttributes = new { @class = "form-control", Name = "AgeRestiriction" } })
                    @Html.ValidationMessageFor(model => model.Dvd.AgeRestiriction, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dvd.Studio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dvd.Studio, new { htmlAttributes = new { @class = "form-control",Name = "Studio" } })
                @Html.ValidationMessageFor(model => model.Dvd.Studio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" id="producerItem">Producer Name: </label>
            <input name="Producer" type="hidden" id="producer">
            <span id="span">

            </span>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Options</label>
                </div>
                <select class="custom-select" id="drpLang" onchange="ram()">
                    @foreach (var p in Model.Producer)
                    {
                    <option selected>@p.ProducerFname @p.ProducerLname </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" id="castItem">Cast Name: </label>
            <input name="Cast" type="hidden" id="cast">
            <span id="span2">

            </span>
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <label class="input-group-text" for="inputGroupSelect01">Options</label>
                </div>
                <select class="custom-select" id="drpLang2" onchange="shyam()">
                    @foreach (var p in Model.Cast)
                    {
                        <option selected>@p.ActorFname @p.ActorLname </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function shyam() {
        var drpLang2 = document.getElementById('drpLang2');
        var x = drpLang2.options[drpLang2.selectedIndex].text;

        document.getElementById('span2').innerText += x + " , ";

        document.getElementById('cast').value += x + "," ;
    }


</script>
<script>
    function ram() {
        var drpLang = document.getElementById('drpLang');
        var x = drpLang.options[drpLang.selectedIndex].text;

        document.getElementById('span').innerText += x + " , ";

        document.getElementById('producer').value += x + ",";
    }


</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
